# Wait for all JMeter instances to stop running tests.

function usage() {
    cat <<-EOF

    JMeter is launched using a Docker image on each of the JMeter instances. This
    script waits until there are no Docker instances running on the JMeter instances.

    Usage: $0 run-step-tests [options]
     -h, --help                     displays this help message
     -n, --name [NAME]              optional name of the test

     The name of a test will be lower cased and all whitespace replaced with underscores.

     If a script name is not provided the name of the current working directory will be used.

EOF
}

while (( $# > 0 )); do
    key="$1"
    case $key in
        -h|--help)
            usage
            exit 0
            ;;
        -n|--name)
            set-test-name "$2"
            shift
            ;;
        *)
            # Ignore or exit here
        ;;
    esac
    shift
done

# Name is optional if script is being run from the test directory
if [[ -z ${TEST_NAME} ]]; then
    if [[ -r ./config ]]; then
        set-test-name-from-cwd
    else
        error "You must provide a test name"
    fi
fi

if [[ ! -d ${TEST_DIR} ]]; then
    error "Test directory '${TEST_DIR}' does not exists."
fi

source ${TEST_DIR}/config
source ${CMD_DIR}/verify
source ${TEST_DIR}/jmeter
source ${CMD_DIR}/public-or-private

if [[ ${JMETER_CURRENT_IPS} ]]; then
    for IP in ${JMETER_CURRENT_IPS}; do
        while true; do
            DC=$(ssh -i ${AWS_PEM} -oStrictHostKeyChecking=no ec2-user@${IP} 'docker ps | grep -i jmeter | wc -l')
            check $? "Checking host ${IP}"
            if (( ${DC} == 0 )); then
                break
            fi
            echo "Still ${DC} docker processes running on ${IP}, sleeping for 30 seconds ..."
            sleep 30
        done
    done
fi
